name: Regenerate Connectors

on:
  # # Run nightly at 2:00 AM
  # schedule:
  #   - cron: '0 2 * * *'
  # Trigger manually with specified Ballerina Docker version
  workflow_dispatch:
    inputs:
      bal_docker_version:
        description: Ballerina Docker version
        required: true
        default: 'nightly'
      client_method:
        description: Expected Client Method Type
        required: true
        default: 'remote'
        options: ['remote', 'resource']
      custom_distribution_path:
        description: Path to Ballerina Custom Distribution
        required: true
        default: ''


jobs:
  # regenerate_connectors_with_nightly:
  #   if: github.event_name == 'schedule'
  #   runs-on: ubuntu-latest
  #   container:
  #     image: ballerina/ballerina:nightly
  #     options: --user root
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2
      
  #     - name: Build with Gradle
  #       env:
  #         JAVA_OPTS: -DBALLERINA_DEV_COMPILE_BALLERINA_ORG=true
  #         GRADLE_USER_HOME: ~/.gradle
  #       run: |
  #         ./gradlew build -PtestConnectorGeneration=true -PclientMethod=${{ github.event.inputs.client_method }}

  regenerate_connectors_with_specified_version:
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    container:
      image: ballerina/ballerina:${{ github.event.inputs.bal_docker_version }}
      options: --user root
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Download, Unzip, and Delete
        run: |
          # Download the zip file
          wget --header="Authorization: Bearer ${{ secrets.PACKAGE_PAT }}" -O ballerina.zip "${{ github.event.inputs.client_method }}/zip"

          # Unzip the contents of the zip file
          unzip -o ballerina.zip

          # Get a list of all zip files in the directory
          balDistZip=$(find . -name 'ballerina-*.zip' | head -n 1)

          echo "Unzipping ${balDistZip}"
          unzip -o "${balDistZip}"

          extractedDistributionPath="${balDistZip%.zip}"
          echo "bal folder ${extractedDistributionPath}"

          echo "$extractedDistributionPath" > extracted_path.txt

      - name: Build with Gradle
        env:
          JAVA_OPTS: -DBALLERINA_DEV_COMPILE_BALLERINA_ORG=true
          GRADLE_USER_HOME: ~/.gradle
          packagePAT: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ./gradlew build -PtestConnectorGeneration=true -PclientMethod=${{ github.event.inputs.client_method }}
      - name: Upload Summary Report
        uses: actions/upload-artifact@v2
        with:
          name: summary-report
          path: .github/reports/summary.txt